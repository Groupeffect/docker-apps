services:
  # crowdsec:
  #   build:
  #     context: '.'
  #     dockerfile: Dockerfile

  #   restart: unless-stopped
  #   network_mode: host
  #   volumes:
  #     - ./app:/app
  #     # - /var/run/docker.sock:/var/run/docker.sock
  #     # - /var/run/podman/podman.sock:/var/run/docker.sock
  #   env_file:
  #     - .env
  #   command: python3 -m http.server 80

  crowdsec:
    image: crowdsecurity/crowdsec
    restart: always
    environment:
      #this is the list of collections we want to install
      #https://hub.crowdsec.net/author/crowdsecurity/collections/nginx
      COLLECTIONS: "crowdsecurity/nginx"
      GID: "${GID-1000}"
    ports:
      - '127.0.0.1:8888:8080' ## We expose the LAPI 8080 via loopback for bouncers to connect
    ## Change to '8080:8080' if you want to expose the LAPI to external hosts, HOWEVER, do so at your own risk.
    # volumes:
    #   - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
    #   - logs:/var/log/nginx
    #   - crowdsec-db:/var/lib/crowdsec/data/
    #   - crowdsec-config:/etc/crowdsec/
    # networks:
    #   crowdsec_test:
    #     ipv4_address: 172.20.0.4

  dashboard:
    #we're using a custom Dockerfile so that metabase pops with pre-configured dashboards
    build: 
      context: '.'
      dockerfile: Dockerfile.dashboard
    restart: always
    ports:
      - 8888:3000
    environment:
      MB_DB_FILE: /data/metabase.db
      MGID: "${GID-1000}"
    depends_on:
      - 'crowdsec'
    # volumes:
    #   - crowdsec-db:/metabase-data/
    # networks:
    #   crowdsec_test:
    #     ipv4_address: 172.20.0.5

# networks:
#   crowdsec_test:
#     ipam:
#       driver: default
#       config:
#         - subnet: 172.20.0.0/24